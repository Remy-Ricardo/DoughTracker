// <auto-generated />
using System;
using DoughTracker.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DoughTracker.Persistence.Migrations
{
    [DbContext(typeof(DoughTrackerDbContext))]
    partial class DoughTrackerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DoughTracker.Domain.Entities.Account", b =>
                {
                    b.Property<Guid>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("AccountTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoutingNumber")
                        .HasColumnType("int");

                    b.HasKey("AccountID");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountID = new Guid("26ae6ab0-77ce-4769-879a-368b0e9f50a2"),
                            AccountNumber = 1287518947,
                            AccountTypeID = new Guid("2ff885b0-e66d-4cc1-9870-0a316dfaa912"),
                            Active = true,
                            Balance = 1267.12m,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Discover Checkings Account x2135",
                            RoutingNumber = 31100649
                        },
                        new
                        {
                            AccountID = new Guid("8c8171c9-9e1d-45a5-a8dc-d72ed3f663cf"),
                            AccountNumber = -60528861,
                            AccountTypeID = new Guid("b0c8492b-fb67-4e26-9841-c3e29a44e845"),
                            Active = true,
                            Balance = 5812.64m,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Discover Savings Account x2786",
                            RoutingNumber = 31100649
                        });
                });

            modelBuilder.Entity("DoughTracker.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("TransactionID");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            TransactionID = new Guid("f12b278e-76e8-4bbe-bb83-ef101dc04f16"),
                            AccountID = new Guid("26ae6ab0-77ce-4769-879a-368b0e9f50a2"),
                            Amount = 1152.64m,
                            CategoryID = new Guid("8c028c71-395c-4432-b92d-9b01ad6f5487"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Monthly Mortage Payment",
                            Frequency = "Every 1st of the month",
                            Notes = "",
                            PaymentType = "Checkings Transfer",
                            Status = "Posted",
                            TransactionType = "Expense"
                        },
                        new
                        {
                            TransactionID = new Guid("b1bffd63-698c-4d64-9421-b41fa5729c37"),
                            AccountID = new Guid("26ae6ab0-77ce-4769-879a-368b0e9f50a2"),
                            Amount = 132.49m,
                            CategoryID = new Guid("2cf47a80-0c92-4aa6-8db3-40401fe863ab"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Oklahoma Natural Gas Bill",
                            Frequency = "Every 25th of the month",
                            Notes = "",
                            PaymentType = "Checkings Transfer",
                            Status = "Posted",
                            TransactionType = "Expense"
                        });
                });

            modelBuilder.Entity("DoughTracker.Domain.Entities.TransactionCategory", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("SubcategoryID")
                        .HasColumnType("int");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = new Guid("8c028c71-395c-4432-b92d-9b01ad6f5487"),
                            CategoryName = "Housing",
                            SubcategoryID = 1
                        },
                        new
                        {
                            CategoryID = new Guid("de66798e-b402-4c25-a112-51355c514236"),
                            CategoryName = "Housing",
                            SubcategoryID = 2
                        },
                        new
                        {
                            CategoryID = new Guid("db9314d8-8420-4119-a3f9-1d50e2d706c5"),
                            CategoryName = "Housing",
                            SubcategoryID = 3
                        },
                        new
                        {
                            CategoryID = new Guid("e660279f-e2b8-439c-8f6e-b9f42a4b246c"),
                            CategoryName = "Housing",
                            SubcategoryID = 4
                        },
                        new
                        {
                            CategoryID = new Guid("6b86a389-0f52-4db9-82cf-0e0ddbee987f"),
                            CategoryName = "Housing",
                            SubcategoryID = 5
                        },
                        new
                        {
                            CategoryID = new Guid("1335a07d-9c07-4065-a32b-d1f5320a9bc9"),
                            CategoryName = "Transportation",
                            SubcategoryID = 10
                        },
                        new
                        {
                            CategoryID = new Guid("8cfaac92-bf75-4270-a98f-3fd156c6847b"),
                            CategoryName = "Transportation",
                            SubcategoryID = 11
                        },
                        new
                        {
                            CategoryID = new Guid("623b4a15-4438-43c9-9fb7-7ce07e23372a"),
                            CategoryName = "Transportation",
                            SubcategoryID = 12
                        },
                        new
                        {
                            CategoryID = new Guid("b40cecb1-2cc8-4f69-b9c5-f1e9c5891721"),
                            CategoryName = "Transportation",
                            SubcategoryID = 13
                        },
                        new
                        {
                            CategoryID = new Guid("2d17e5f4-3c65-4f2d-a327-d7e1cee05a43"),
                            CategoryName = "Transportation",
                            SubcategoryID = 14
                        },
                        new
                        {
                            CategoryID = new Guid("366a8245-13af-4ab8-8dd5-d86af1829023"),
                            CategoryName = "Transportation",
                            SubcategoryID = 15
                        },
                        new
                        {
                            CategoryID = new Guid("6bd1f3ab-448b-4ab9-8670-2be902bf17f2"),
                            CategoryName = "Transportation",
                            SubcategoryID = 16
                        },
                        new
                        {
                            CategoryID = new Guid("f2d5480c-4ff7-4ca7-a40d-43fb6080f3a0"),
                            CategoryName = "Transportation",
                            SubcategoryID = 17
                        },
                        new
                        {
                            CategoryID = new Guid("d45af9da-f49f-47bf-a2a8-aa6f8a78f3ea"),
                            CategoryName = "Food",
                            SubcategoryID = 21
                        },
                        new
                        {
                            CategoryID = new Guid("9360d7da-9017-4c0a-afa5-81a1edf855fa"),
                            CategoryName = "Food",
                            SubcategoryID = 22
                        },
                        new
                        {
                            CategoryID = new Guid("d62aa78b-f0b7-49dc-a2a9-d93a82ba6363"),
                            CategoryName = "Food",
                            SubcategoryID = 23
                        },
                        new
                        {
                            CategoryID = new Guid("86268ccc-6f56-4af9-9f61-5bb12ae9c947"),
                            CategoryName = "Food",
                            SubcategoryID = 24
                        },
                        new
                        {
                            CategoryID = new Guid("18c4ce11-fcba-42e4-877b-a53589c339d2"),
                            CategoryName = "Utilities",
                            SubcategoryID = 31
                        },
                        new
                        {
                            CategoryID = new Guid("2cf47a80-0c92-4aa6-8db3-40401fe863ab"),
                            CategoryName = "Utilities",
                            SubcategoryID = 32
                        },
                        new
                        {
                            CategoryID = new Guid("d5848a60-6b42-4ae4-9d54-eb67daf5e74f"),
                            CategoryName = "Utilities",
                            SubcategoryID = 33
                        },
                        new
                        {
                            CategoryID = new Guid("ef086ccc-d6a9-40fd-b626-b27e5ee3843f"),
                            CategoryName = "Utilities",
                            SubcategoryID = 34
                        },
                        new
                        {
                            CategoryID = new Guid("1327d335-1fae-4011-bf8a-0b63eacce293"),
                            CategoryName = "Utilities",
                            SubcategoryID = 35
                        },
                        new
                        {
                            CategoryID = new Guid("de31fa20-97c0-4764-be13-bda7bc7e62ca"),
                            CategoryName = "Utilities",
                            SubcategoryID = 35
                        },
                        new
                        {
                            CategoryID = new Guid("cf6305ba-b753-4c07-9d42-364171e92b83"),
                            CategoryName = "Utilities",
                            SubcategoryID = 36
                        },
                        new
                        {
                            CategoryID = new Guid("18fef4c3-3599-4136-a133-a7fd2955b63a"),
                            CategoryName = "Utilities",
                            SubcategoryID = 38
                        });
                });

            modelBuilder.Entity("DoughTracker.Domain.Entities.TransactionSubcategory", b =>
                {
                    b.Property<int>("SubcategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SubcategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubcategoryID");

                    b.ToTable("TransactionSubcategory");

                    b.HasData(
                        new
                        {
                            SubcategoryID = 1,
                            SubcategoryName = "Mortgage"
                        },
                        new
                        {
                            SubcategoryID = 2,
                            SubcategoryName = "Rent"
                        },
                        new
                        {
                            SubcategoryID = 3,
                            SubcategoryName = "Property Taxes"
                        },
                        new
                        {
                            SubcategoryID = 4,
                            SubcategoryName = "Household Repairs"
                        },
                        new
                        {
                            SubcategoryID = 5,
                            SubcategoryName = "HOA Fees"
                        },
                        new
                        {
                            SubcategoryID = 10,
                            SubcategoryName = "Car Payment"
                        },
                        new
                        {
                            SubcategoryID = 11,
                            SubcategoryName = "Car Warranty"
                        },
                        new
                        {
                            SubcategoryID = 12,
                            SubcategoryName = "Gas"
                        },
                        new
                        {
                            SubcategoryID = 13,
                            SubcategoryName = "Tires"
                        },
                        new
                        {
                            SubcategoryID = 14,
                            SubcategoryName = "Parking Fees"
                        },
                        new
                        {
                            SubcategoryID = 15,
                            SubcategoryName = "Repairs"
                        },
                        new
                        {
                            SubcategoryID = 16,
                            SubcategoryName = "Registration/DMV Fee"
                        },
                        new
                        {
                            SubcategoryID = 17,
                            SubcategoryName = "Maintenance/Oil changes"
                        },
                        new
                        {
                            SubcategoryID = 21,
                            SubcategoryName = "Groceries"
                        },
                        new
                        {
                            SubcategoryID = 22,
                            SubcategoryName = "Restaurants"
                        },
                        new
                        {
                            SubcategoryID = 23,
                            SubcategoryName = "Fast Food/Snacks"
                        },
                        new
                        {
                            SubcategoryID = 24,
                            SubcategoryName = "Pet Food"
                        },
                        new
                        {
                            SubcategoryID = 31,
                            SubcategoryName = "Electricity"
                        },
                        new
                        {
                            SubcategoryID = 32,
                            SubcategoryName = "Gas"
                        },
                        new
                        {
                            SubcategoryID = 33,
                            SubcategoryName = "Water"
                        },
                        new
                        {
                            SubcategoryID = 34,
                            SubcategoryName = "Garbage"
                        },
                        new
                        {
                            SubcategoryID = 35,
                            SubcategoryName = "Sewage"
                        },
                        new
                        {
                            SubcategoryID = 36,
                            SubcategoryName = "Phones"
                        },
                        new
                        {
                            SubcategoryID = 37,
                            SubcategoryName = "Cable"
                        },
                        new
                        {
                            SubcategoryID = 38,
                            SubcategoryName = "Internet"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
